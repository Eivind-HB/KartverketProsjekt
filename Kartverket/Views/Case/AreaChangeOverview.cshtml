@model AreaChangeOverviewModel
@using System.Security.Claims


@{
    ViewData["Title"] = "Overview";
}


<div class="page-container">
    <h1>Oversikt av registrerte endringer</h1>

    <div class="accordion-container">
        @if (User.Identity.IsAuthenticated)
        {
            //TempData["OpprettetSaksnr"]
            <a class="nav-link text-dark" asp-controller="User" asp-action="Profile">Hallo, @User.Identity.Name!</a>
            var userIdClaim = User.FindFirst(ClaimTypes.NameIdentifier);
            int userId = 0;
            if (userIdClaim != null)
            {
                userId = int.Parse(userIdClaim.Value);
            }
            @foreach (var change in Model.Cases)
            {
                @if (userId == change.User_UserID)
                {
                    var issueType = @change.Issue_IssueNr.ToString();
                    var kommuneName = change.KommuneNo.ToString();
                    var fylkeName = change.FylkesNo.ToString();
                    var statusType = change.StatusNo.ToString();
                    <!-- Individual Case Section -->
                    <div class="accordion-item">
                        <button class="accordion-header">
                            Saks ID: @change.CaseNo
                            <span class="accordion-icon">▼</span>
                        </button>

                        <div class="accordion-content">
                            <!-- Case and location tables in 1 accordion per case -->
                            <div class="issue-location-details">
                                <!-- Checks and finds the correct issuetype in DB based on the issuenumber-->
                                @foreach (var differentIssues in Model.Issues)
                                {
                                    var CaseIssue = @change.Issue_IssueNr;
                                    if(CaseIssue == @differentIssues.issueNo)
                                    {
                                        issueType = @differentIssues.IssueType;
                                    }
                                }
                                <!--Checks and finds the correct kommunename in DB based on the kommunenumber-->
                                @foreach (var differentKommuneNos in Model.KommuneInfos)
                                {
                                    var CaseKommuneNo = @change.KommuneNo;
                                    if (CaseKommuneNo == @differentKommuneNos.KommuneInfoID)
                                    {
                                        kommuneName = @differentKommuneNos.KommuneName;
                                    }
                                }
                                <!--Checks and finds the correct fylkesname in DB based on the fylkesnumber-->
                                @foreach (var differentFylkeNos in Model.FylkesInfos)
                                {
                                    var CaseFylkeNo = @change.FylkesNo;
                                    if (CaseFylkeNo == @differentFylkeNos.FylkesNameID)
                                    {
                                        fylkeName = @differentFylkeNos.FylkesName;
                                    }
                                }

                                <!--Checks and finds the correct fylkesname in DB based on the fylkesnumber-->
                                @foreach (var differentStatusNos in Model.Status)
                                {
                                    var CaseStatusNo = @change.StatusNo;
                                    if (CaseStatusNo == @differentStatusNos.StatusNo)
                                    {
                                        statusType = @differentStatusNos.StatusName;
                                    }
                                }
                                
                                <!-- Case detail table -->
                                <table class="table table-compact">
                                    <thead>
                                        <tr>
                                            <th>Saks Nummer</th>
                                            <th>Saks Type</th>
                                            <th>Saks Status</th>
                                            <th>Saks Dato</th>
                                            <th>GeoJson</th>
                                            <th>Beskrivelse</th>
                                            <th>BrukerID</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>@change.CaseNo</td>
                                            <td>@issueType</td>
                                            <td>@statusType</td>
                                            <td>@change.Date</td>
                                            <td>@change.LocationInfo</td>
                                            <!--Here what can be changed by editing will be put. For now it is only description, but it will contain IssueType and Image-->
                                            <td>
                                                <span id="description-@change.CaseNo">@change.Description</span>
                                        
                                                <!-- Edit Form -->
                                                <form id="edit-form-@change.CaseNo" asp-action="EditDescription" asp-controller="Case" method="post" style="display:none;">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="caseId" value="@change.CaseNo" />
                                                    <textarea name="newDescription" class="form-control">@change.Description</textarea>
                                                </form>
                                            </td>
                                            <td>@change.User_UserID</td>
                                        </tr>
                                    </tbody>
                                </table>

                                <!-- Location details table -->
                                <table class="table table-compact">
                                    <thead>
                                        <tr>
                                            <th>Kommunenavn</th>
                                            <th>Kommunenummer</th>
                                            <th>Fylkesnavn</th>
                                            <th>Fylkesnummer</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>@kommuneName</td>
                                            <td>@change.KommuneNo</td>
                                            <td>@fylkeName</td>
                                            <td>@change.FylkesNo</td>
                                        </tr>
                                    </tbody>
                                </table>

                                <!-- Buttons for Edit and Delete -->
                                <div class="btn-group">
                                    <!-- Deletion button -->                       
                                    <form asp-action="DeleteCase" asp-controller="Case" method="post" style="display: inline;">
                                        @Html.AntiForgeryToken()
                                        <input type ="hidden" name="caseId" value="@change.CaseNo"/>
                                        <button type="submit" class="btn btn-danger" onclick="return confirm('Er du sikker du vil slette denne saken? Dette kan ikke tas tilbake')">Slett sak</button>
                                    </form>

                                    <!-- Edit button to toggle edit form -->
                                    <button onclick="toggleEditForm(@change.CaseNo)" class="btn btn-primary" style="display: inline;">Rediger</button>

                                    <!-- Show Image button to display the attatched image -->
                                    @if (change.Images != null)
                                    {
                                        var base64 = Convert.ToBase64String(change.Images);
                                        var imgSrc = String.Format("data:image/png;base64,{0}", base64);
                                        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#imageModal" data-img-src="@imgSrc">Vis Bilde</button>
                                    }

                                </div>

                                <!-- Save and Cancel buttons for Edit Form, only visible when editing -->
                                <div id="edit-buttons-@change.CaseNo" class="edit-form-btn" style="display: none;">
                                    <button form="edit-form-@change.CaseNo" type="submit" class="btn btn-success">Lagre</button>
                                    <button type="button" onclick="toggleEditForm(@change.CaseNo)" class="btn btn-secondary">Avbryt</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        }
        else
        {
            <form asp-action="CaseSearch" asp-controller="Case" method="post">
                @Html.AntiForgeryToken()
                <label for="CaseNo">Søk på sak etter saksnummer:</label>
                <input type="number" id="CaseNo" name="CaseNo" required>
                <button type="submit">Søk</button>
            </form>
            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
            }
        }
    </div>

    <div class="map-change-container">
        <div id="map" class="map-section"></div>
    </div>
</div>
  
<!-- Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Vedlagt Bilde</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img id="modalImage" src="" alt="Case Image" class="img-fluid" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Lukk</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/leafletMap.js"></script>
    <script src="~/js/mapChanges.js"></script>
    <script src="~/js/modal.js"></script>

    <script>
        // Toggle the edit form visibility
        function toggleEditForm(caseNo) {
            const form = document.getElementById(`edit-form-${caseNo}`);
            const editButtons = document.getElementById(`edit-buttons-${caseNo}`);
            const isHidden = form.style.display === "none";
            
            form.style.display = isHidden ? "block" : "none";
            editButtons.style.display = isHidden ? "flex" : "none";
        }

        // Passes the serialized AreaChanges model data to the mapChanges function
        var drawnChanges = @Html.Raw(Json.Serialize(Model.Cases));
        initializeDrawnChanges(drawnChanges);

        // Accordion functionality
        document.querySelectorAll('.accordion-header').forEach(button => {
            button.addEventListener('click', () => {
                const accordionContent = button.nextElementSibling;
                button.classList.toggle('active');

                if (accordionContent.style.display === 'block') {
                    accordionContent.style.display = 'none';
                } else {
                    accordionContent.style.display = 'block';
                }

                // Update map size when accordion changes
                map.invalidateSize();
            });
        });

       
    </script>
}