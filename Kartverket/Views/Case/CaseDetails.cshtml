@model Kartverket.Data.Case

@{
    ViewData["Title"] = "CaseDetails";
}


<h2>Saksdetaljer</h2>

<div class="page-container">
    <div class="issue-location-details">
        <!-- Case detail table -->
        <table class="table table-compact">
            <thead>
                <tr>
                    <th>Saks Nummer</th>
                    <th>Saks Type</th>
                    <th>Saks Dato</th>
                    <th>GeoJson</th>
                    <th>Beskrivelse</th>
                    <th>Bilde</th>
                    <th>BrukerID</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.CaseNo</td>
                    <td>@Model.Issue_IssueNr</td>
                    <td>@Model.Date</td>
                    <td>@Model.LocationInfo</td>
                    <td>@Model.Images</td>
                    <td>@Model.User_UserID</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="map-change-container">
        <div id="map" class="map-section"></div>
    </div>
</div>

@section Scripts {
    <script src="~/js/leafletMap.js"></script>
    <script src="~/js/mapChanges.js"></script>

    <script>
        // Toggle the edit form visibility
        function toggleEditForm(caseNo) {
            const form = document.getElementById(`edit-form-${caseNo}`);
            const editButtons = document.getElementById(`edit-buttons-${caseNo}`);
            const isHidden = form.style.display === "none";

            form.style.display = isHidden ? "block" : "none";
            editButtons.style.display = isHidden ? "flex" : "none";
        }

        // Passes the serialized AreaChanges model data to the mapChanges function
        //var drawnChanges = Html.Raw(Json.Serialize(Model));
        //initializeDrawnChanges(drawnChanges);
                // Assuming you have a map object and a single change object
        var singleChange = {
            caseNo: Model.CaseNo,
            locationInfo: Model.LocationInfo,
            Description: Model.Description
        };

        drawSingleGeoJson(singleChange, map);


        // Accordion functionality
        document.querySelectorAll('.accordion-header').forEach(button => {
            button.addEventListener('click', () => {
                const accordionContent = button.nextElementSibling;
                button.classList.toggle('active');

                if (accordionContent.style.display === 'block') {
                    accordionContent.style.display = 'none';
                } else {
                    accordionContent.style.display = 'block';
                }

                // Update map size when accordion changes
                map.invalidateSize();
            });
        });
    </script>
}

<a asp-action="Index" class="btn btn-secondary">Tilbake til oversikt</a>